[{"/home/aurelien/Dev/mernstack/client/src/index.js":"1","/home/aurelien/Dev/mernstack/client/src/reportWebVitals.js":"2","/home/aurelien/Dev/mernstack/client/src/App.js":"3","/home/aurelien/Dev/mernstack/client/src/components/Navbar.js":"4","/home/aurelien/Dev/mernstack/client/src/components/screens/Home.js":"5","/home/aurelien/Dev/mernstack/client/src/components/screens/Signup.js":"6","/home/aurelien/Dev/mernstack/client/src/components/screens/Profile.js":"7","/home/aurelien/Dev/mernstack/client/src/components/screens/SignIn.js":"8","/home/aurelien/Dev/mernstack/client/src/components/screens/CreatePost.js":"9","/home/aurelien/Dev/mernstack/client/src/reducers/userReducer.js":"10","/home/aurelien/Dev/mernstack/client/src/components/screens/UserProfile.js":"11","/home/aurelien/Dev/mernstack/client/src/components/screens/SubscribesUserPosts.js":"12"},{"size":500,"mtime":1610559939686,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610485267146,"results":"15","hashOfConfig":"14"},{"size":1821,"mtime":1612273069167,"results":"16","hashOfConfig":"14"},{"size":1381,"mtime":1612273652976,"results":"17","hashOfConfig":"14"},{"size":5926,"mtime":1612097019331,"results":"18","hashOfConfig":"14"},{"size":3677,"mtime":1612276871291,"results":"19","hashOfConfig":"14"},{"size":3619,"mtime":1612280452657,"results":"20","hashOfConfig":"14"},{"size":2456,"mtime":1611857812845,"results":"21","hashOfConfig":"14"},{"size":2803,"mtime":1610895544069,"results":"22","hashOfConfig":"14"},{"size":516,"mtime":1612265939470,"results":"23","hashOfConfig":"14"},{"size":4793,"mtime":1612274172647,"results":"24","hashOfConfig":"14"},{"size":5929,"mtime":1612272717401,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1j62904",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},"/home/aurelien/Dev/mernstack/client/src/index.js",[],["61","62"],"/home/aurelien/Dev/mernstack/client/src/reportWebVitals.js",[],"/home/aurelien/Dev/mernstack/client/src/App.js",["63","64"],"import React,{useEffect,createContext,useReducer, useContext} from 'react';\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/SignIn'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport UserProfile from './components/screens/UserProfile'\nimport {reducer,initialState} from './reducers/userReducer'\nimport SubscribesUserPosts from './components/screens/SubscribesUserPosts'\n\nexport const UserContext = createContext()\n\n\nconst Routing = ()=> {\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }\n    else{\n      history.push('/signin')\n    }\n\n  },[])\n  return(\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/myfollowingpost\">\n        <SubscribesUserPosts />\n      </Route>\n    </Switch>\n    \n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n      <BrowserRouter>\n      <NavBar />\n      <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n    \n    \n  );\n}\n\nexport default App;\n","/home/aurelien/Dev/mernstack/client/src/components/Navbar.js",[],"/home/aurelien/Dev/mernstack/client/src/components/screens/Home.js",["65","66","67","68","69","70"],"import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\nconst Home  = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n       fetch('/allpost',{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           console.log(result)\n           setData(result.posts)\n       })\n    },[])\n\n    const likePost = (id)=>{\n          fetch('/like',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n                   //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n    const unlikePost = (id)=>{\n          fetch('/unlike',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n            //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n          fetch('/comment',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId,\n                  text\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n              console.log(result)\n              const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n             })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n\n    const deletePost = (postid)=>{\n        fetch(`/deletepost/${postid}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n   return (\n       <div className=\"home\">\n           {\n               data.map(item=>{\n                   return(\n                       <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n\n                            }</h5>\n                            <div className=\"card-image\">\n                                <img src={item.photo}/>\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ? \n                             <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                              >thumb_down</i>\n                            : \n                            <i className=\"material-icons\"\n                            onClick={()=>{likePost(item._id)}}\n                            >thumb_up</i>\n                            }\n                            \n                           \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \n                                </form>\n                                \n                            </div>\n                        </div> \n                   )\n               })\n           }\n          \n          \n       </div>\n   )\n}\n\n\nexport default Home","/home/aurelien/Dev/mernstack/client/src/components/screens/Signup.js",["71","72","73"],"import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst SignUp = ()=>{\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n\n    useEffect(()=>{\n        if(url){\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n       data.append(\"cloud_name\",\"drsmakj7c\")\n        fetch(\"https://api.cloudinary.com/v1_1/drsmakj7c/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n           setUrl(data.url)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const uploadFields = ()=>{\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\n            return\n        }\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n           if(data.error){\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n           }\n           else{\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\n               history.push('/signin')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    const PostData = ()=>{\n        if(image){\n            uploadPic()\n        }else{\n            uploadFields()\n        }\n       \n    }\n\n    return(\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2>Instagram</h2>\n\n                <input\n                type=\"text\"\n                placeholder=\"name\"\n                value={name}\n                onChange={(e)=>setName(e.target.value)}\n                />\n\n                <input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=>setEmail(e.target.value)}\n                />\n\n                <input\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n                />\n\n                <div className=\"file-field input-field\">\n                <div className=\"btn #64b5f6 blue darken-1\">\n                    <span>Uplaod Image</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n                </div>\n                \n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={()=>PostData()}\n                >\n                    SignUp\n                </button>\n\n                <h5>\n                    <Link to=\"/signin\">Already have an account ?</Link>\n                </h5>\n\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp","/home/aurelien/Dev/mernstack/client/src/components/screens/Profile.js",["74","75"],"import React,{useEffect,useState,useContext} from 'react'\nimport {UserContext} from '../../App'\n\nconst Profile  = ()=>{\n    const [mypics,setPics] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    const [image,setImage] = useState(\"\")\n    useEffect(()=>{\n       fetch('/mypost',{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           console.log(result)\n           setPics(result.mypost)\n       })\n    },[])\n    useEffect(()=>{\n       if(image){\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"drsmakj7c\")\n        fetch(\"https://api.cloudinary.com/v1_1/drsmakj7c/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n    \n       \n           fetch('/updatepic',{\n               method:\"put\",\n               headers:{\n                   \"Content-Type\":\"application/json\",\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n               },\n               body:JSON.stringify({\n                   pic:data.url\n               })\n           }).then(res=>res.json())\n           .then(result=>{\n               console.log(result)\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\n               //window.location.reload()\n           })\n       \n        })\n        .catch(err=>{\n            console.log(err)\n        })\n       }\n    },[image])\n    const updatePhoto = (file)=>{\n        setImage(file)\n    }\n   return (\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n           <div style={{\n              margin:\"18px 0px\",\n               borderBottom:\"1px solid grey\"\n           }}>\n\n         \n           <div style={{\n               display:\"flex\",\n               justifyContent:\"space-around\",\n              \n           }}>\n               <div>\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\n                   src={state?state.pic:\"loading\"}\n                   />\n                 \n               </div>\n               <div>\n                   <h4>{state?state.name:\"loading\"}</h4>\n                   <h5>{state?state.email:\"loading\"}</h5>\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                       <h6>{mypics.length} posts</h6>\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\n                       <h6>{state?state.following.length:\"0\"} following</h6>\n                   </div>\n\n               </div>\n           </div>\n        \n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\n            <div className=\"btn #64b5f6 blue darken-1\">\n                <span>Update pic</span>\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" />\n            </div>\n            </div>\n            </div>      \n           <div className=\"gallery\">\n               {\n                   mypics.map(item=>{\n                       return(\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \n                       )\n                   })\n               }\n\n           \n           </div>\n       </div>\n   )\n}\n\n\nexport default Profile","/home/aurelien/Dev/mernstack/client/src/components/screens/SignIn.js",["76","77","78"],"import React,{useState,useContext} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {UserContext} from '../../App'\nimport M from 'materialize-css'\n\nconst SignIn = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const history = useHistory()\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const PostData = ()=>{\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"Invalid email\",classes:\"#c62828 red darken-3\"})\n            return\n        }\n\n        fetch(\"/signin\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                email            \n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                localStorage.setItem(\"jwt\", data.token)\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\n                dispatch({type:\"USER\", payload:data.user})\n                M.toast({html: \"signedin success\",classes:\"#43a047 green darken-1\"})\n                history.push('/')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    return(\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2>Instagram</h2>\n                <input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=>setEmail(e.target.value)}\n                />\n\n                <input\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n                />\n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={()=>PostData()}\n                >\n                    Login\n                </button>\n\n                <h5>\n                    <Link to=\"/signup\">Don't have an account ?</Link>\n                </h5>\n\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn","/home/aurelien/Dev/mernstack/client/src/components/screens/CreatePost.js",["79"],"import React,{useState,useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\nconst CreatePost = ()=>{\n    const history = useHistory()\n    const [title,setTitle] = useState(\"\")\n    const [body,setBody] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    useEffect(()=>{\n       if(url){\n        fetch(\"/createpost\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                title,\n                body,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n    \n           if(data.error){\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n           }\n           else{\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\n               history.push('/')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    },[url])\n  \n   const postDetails = ()=>{\n       const data = new FormData()\n       data.append(\"file\",image)\n       data.append(\"upload_preset\",\"insta-clone\")\n       data.append(\"cloud_name\",\"drsmakj7c\")\n       fetch(\"https://api.cloudinary.com/v1_1/drsmakj7c/image/upload\",{\n           method:\"post\",\n           body:data\n       })\n       .then(res=>res.json())\n       .then(data=>{\n          setUrl(data.url)\n       })\n       .catch(err=>{\n           console.log(err)\n       })\n\n    \n   }\n \n\n   return(\n       <div className=\"card input-filed\"\n       style={{\n           margin:\"30px auto\",\n           maxWidth:\"500px\",\n           padding:\"20px\",\n           textAlign:\"center\"\n       }}\n       >\n           <input \n           type=\"text\"\n            placeholder=\"title\"\n            value={title}\n            onChange={(e)=>setTitle(e.target.value)}\n            />\n           <input\n            type=\"text\"\n             placeholder=\"body\"\n             value={body}\n            onChange={(e)=>setBody(e.target.value)}\n             />\n           <div className=\"file-field input-field\">\n            <div className=\"btn #64b5f6 blue darken-1\">\n                <span>Uplaod Image</span>\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" />\n            </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>postDetails()}\n            \n            >\n                Submit post\n            </button>\n\n       </div>\n   )\n}\n\n\nexport default CreatePost","/home/aurelien/Dev/mernstack/client/src/reducers/userReducer.js",["80","81","82","83"],"export const initialState = null\n\nexport const reducer = (state,action)=>{\n    if(action.type==\"USER\"){\n        return action.payload\n    }\n    if(action.type==\"CLEAR\"){\n        return null\n    }\n    if(action.type==\"UPDATE\"){\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following\n        }\n    }\n    if(action.type==\"UPDATEPIC\"){\n        return {\n            ...state,\n            pic:action.payload\n        }\n    }\n    return state\n} ","/home/aurelien/Dev/mernstack/client/src/components/screens/UserProfile.js",["84","85","86"],"import React,{useEffect,useState,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\nconst Profile  = ()=>{\n    const [userProfile,setProfile] = useState(null)\n    const {state,dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\n    useEffect(()=>{\n       fetch(`/user/${userid}`,{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           //console.log(result)\n         \n            setProfile(result)\n       })\n    },[])\n\n\n    const followUser = ()=>{\n        fetch('/follow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n        \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n             localStorage.setItem(\"user\",JSON.stringify(data))\n             setProfile((prevState)=>{\n                 return {\n                     ...prevState,\n                     user:{\n                         ...prevState.user,\n                         followers:[...prevState.user.followers,data._id]\n                        }\n                 }\n             })\n             setShowFollow(false)\n        })\n    }\n    const unfollowUser = ()=>{\n        fetch('/unfollow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n             localStorage.setItem(\"user\",JSON.stringify(data))\n            \n             setProfile((prevState)=>{\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\n                 return {\n                     ...prevState,\n                     user:{\n                         ...prevState.user,\n                         followers:newFollower\n                        }\n                 }\n             })\n             setShowFollow(true)\n             \n        })\n    }\n   return (\n       <>\n       {userProfile ?\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n           <div style={{\n               display:\"flex\",\n               justifyContent:\"space-around\",\n               margin:\"18px 0px\",\n               borderBottom:\"1px solid grey\"\n           }}>\n               <div>\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\n                   src={userProfile.user.pic}\n                   />\n               </div>\n               <div>\n                   <h4>{userProfile.user.name}</h4>\n                   <h5>{userProfile.user.email}</h5>\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                       <h6>{userProfile.posts.length} posts</h6>\n                       <h6>{userProfile.user.followers.length} followers</h6>\n                       <h6>{userProfile.user.following.length} following</h6>\n                   </div>\n                   {showfollow?\n                   <button style={{\n                       margin:\"10px\"\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                    onClick={()=>followUser()}\n                    >\n                        Follow\n                    </button>\n                    : \n                    <button\n                    style={{\n                        margin:\"10px\"\n                    }}\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                    onClick={()=>unfollowUser()}\n                    >\n                        UnFollow\n                    </button>\n                    }\n                   \n                  \n\n               </div>\n           </div>\n     \n           <div className=\"gallery\">\n               {\n                   userProfile.posts.map(item=>{\n                       return(\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \n                       )\n                   })\n               }\n\n           \n           </div>\n       </div>\n       \n       \n       : <h2>loading...!</h2>}\n       \n       </>\n   )\n}\n\n\nexport default Profile",["87","88"],"/home/aurelien/Dev/mernstack/client/src/components/screens/SubscribesUserPosts.js",["89","90","91","92","93","94"],"import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\nconst Home  = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n       fetch('/getsubpost',{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           console.log(result)\n           setData(result.posts)\n       })\n    },[])\n\n    const likePost = (id)=>{\n          fetch('/like',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n                   //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n    const unlikePost = (id)=>{\n          fetch('/unlike',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n            //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n          fetch('/comment',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId,\n                  text\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n              console.log(result)\n              const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n             })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n\n    const deletePost = (postid)=>{\n        fetch(`/deletepost/${postid}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n   return (\n       <div className=\"home\">\n           {\n               data.map(item=>{\n                   return(\n                       <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n\n                            }</h5>\n                            <div className=\"card-image\">\n                                <img src={item.photo}/>\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ? \n                             <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                              >thumb_down</i>\n                            : \n                            <i className=\"material-icons\"\n                            onClick={()=>{likePost(item._id)}}\n                            >thumb_up</i>\n                            }\n                            \n                           \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \n                                </form>\n                                \n                            </div>\n                        </div> \n                   )\n               })\n           }\n          \n          \n       </div>\n   )\n}\n\n\nexport default Home",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":19,"column":10,"nodeType":"101","messageId":"102","endLine":19,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":29,"column":5,"nodeType":"105","endLine":29,"endColumn":7,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":6,"column":18,"nodeType":"101","messageId":"102","endLine":6,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":33,"column":28,"nodeType":"110","messageId":"111","endLine":33,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":58,"column":28,"nodeType":"110","messageId":"111","endLine":58,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":85,"column":28,"nodeType":"110","messageId":"111","endLine":85,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":118,"column":191,"nodeType":"110","messageId":"111","endLine":118,"endColumn":193},{"ruleId":"112","severity":1,"message":"113","line":127,"column":33,"nodeType":"114","endLine":127,"endColumn":56},{"ruleId":"103","severity":1,"message":"115","line":17,"column":7,"nodeType":"105","endLine":17,"endColumn":12,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":38,"column":23,"nodeType":"119","messageId":"120","endLine":38,"endColumn":24,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"118","line":38,"column":48,"nodeType":"119","messageId":"120","endLine":38,"endColumn":49,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":55,"column":7,"nodeType":"105","endLine":55,"endColumn":14,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"113","line":73,"column":20,"nodeType":"114","endLine":75,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":7,"column":12,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":12,"column":23,"nodeType":"119","messageId":"120","endLine":12,"endColumn":24,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"118","line":12,"column":48,"nodeType":"119","messageId":"120","endLine":12,"endColumn":49,"suggestions":"126"},{"ruleId":"103","severity":1,"message":"127","line":37,"column":7,"nodeType":"105","endLine":37,"endColumn":12,"suggestions":"128"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":19,"nodeType":"110","messageId":"111","endLine":4,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":7,"column":19,"nodeType":"110","messageId":"111","endLine":7,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":10,"column":19,"nodeType":"110","messageId":"111","endLine":10,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":17,"column":19,"nodeType":"110","messageId":"111","endLine":17,"endColumn":21},{"ruleId":"103","severity":1,"message":"129","line":20,"column":7,"nodeType":"105","endLine":20,"endColumn":9,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"131","line":67,"column":80,"nodeType":"110","messageId":"111","endLine":67,"endColumn":82},{"ruleId":"112","severity":1,"message":"113","line":91,"column":20,"nodeType":"114","endLine":93,"endColumn":22},{"ruleId":"95","replacedBy":"132"},{"ruleId":"97","replacedBy":"133"},{"ruleId":"99","severity":1,"message":"107","line":6,"column":18,"nodeType":"101","messageId":"102","endLine":6,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":33,"column":28,"nodeType":"110","messageId":"111","endLine":33,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":58,"column":28,"nodeType":"110","messageId":"111","endLine":58,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":85,"column":28,"nodeType":"110","messageId":"111","endLine":85,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":118,"column":191,"nodeType":"110","messageId":"111","endLine":118,"endColumn":193},{"ruleId":"112","severity":1,"message":"113","line":127,"column":33,"nodeType":"114","endLine":127,"endColumn":56},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["137"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["138","139"],["140","141"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["142"],["143","144"],["145","146"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["148"],"Expected '!==' and instead saw '!='.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"messageId":"153","fix":"154","desc":"155"},{"messageId":"156","fix":"157","desc":"158"},{"messageId":"153","fix":"159","desc":"155"},{"messageId":"156","fix":"160","desc":"158"},{"desc":"161","fix":"162"},{"messageId":"153","fix":"163","desc":"155"},{"messageId":"156","fix":"164","desc":"158"},{"messageId":"153","fix":"165","desc":"155"},{"messageId":"156","fix":"166","desc":"158"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [dispatch, history]",{"range":"171","text":"172"},"Update the dependencies array to be: [uploadFields, url]",{"range":"173","text":"174"},"removeEscape",{"range":"175","text":"176"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"177","text":"178"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"179","text":"176"},{"range":"180","text":"178"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"181","text":"182"},{"range":"183","text":"176"},{"range":"184","text":"178"},{"range":"185","text":"176"},{"range":"186","text":"178"},"Update the dependencies array to be: [body, history, title, url]",{"range":"187","text":"188"},"Update the dependencies array to be: [userid]",{"range":"189","text":"190"},[996,998],"[dispatch, history]",[488,493],"[uploadFields, url]",[1037,1038],"",[1037,1037],"\\",[1062,1063],[1062,1062],[1666,1673],"[dispatch, image, state]",[419,420],[419,419],[444,445],[444,444],[1116,1121],"[body, history, title, url]",[695,697],"[userid]"]